---
layout: post
title: 多线程入门
category: iOS基础
tags: iOS 多线程
image: /images/head-800x400/-34.png
description: 多线程入门，基本概念：即1个进程中可以开启多条线程，每条线程可以并行（同时）执行不同的任务。
homepage: false
toc: true
---


### 一、进程
   * 进程是指在系统中正在运行的一个应用程序。
   * 每个进程之间是独立的，每个进程均运行在其专用且受保护的内存空间内。

### 二、线程

#### 1.基本概念
   * 1个进程要想执行任务，必须得有线程（每1个进程至少要有1条线程）
   * 线程是进程的基本执行单元，一个进程（程序）的所有任务都在线程中执行。

#### 2.线程的串行
   * 1个线程中任务的执行是串行的
   * 如果要在1个线程中执行多个任务，那么只能一个一个地按顺序执行这些任务
   * 也就是说，在同一时间内，1个线程只能执行1个任务  

### 三、多线程

#### 1.基本概念
   * 即1个进程中可以开启多条线程，每条线程可以**并行**（同时）执行不同的任务。
#### 2.线程的并行
   * 并行即同时执行。比如同时开启3条线程分别下载3个文件（分别是文件A、文件B、文件C。
#### 3.多线程并发执行的原理
   * 在同一时间里，CPU只能处理1条线程，只有1条线程在工作（执行）。多线程并发（同时）执行，其实是CPU快速地在多条线程之间调度（切换），如果CPU调度线程的时间足够快，就造成了多线程并发执行的假象
#### 4.多线程优缺点
   * 优点
       * 能适当提高程序的执行效率。
       * 能适当提高资源利用率（CPU、内存利用率）
   * 缺点
       * 开启线程需要占用一定的内存空间（默认情况下，主线程占用1M，子线程占用512KB），如果开启大量的线程，会占用大量的内存空间，降低程序的性能。
       * 线程越多，CPU在调度线程上的开销就越大。
       * 程序设计更加复杂：比如线程之间的通信、多线程的数据共享
       

### 四、多线程在iOS开发中的应用

#### 1.主线程
   * 一个iOS程序运行后，默认会开启1条线程，称为“主线程”或“UI线程”。
   * 作用。刷新显示UI,处理UI事件。
#### 2.使用注意
   * 不要将耗时操作放到主线程中去处理，会卡住线程。
   * 和UI相关的刷新操作必须放到主线程中进行处理。

### 五、OS中多线程的实现方案
#### 1.pthread
   * 特点：
      1. 一套通用的多线程API
      2. 适用于Unix\Linux\Windows等系统
      3. 跨平台\可移植
      4. 使用难度大
    * 使用语言：c语言
    * 使用频率：几乎不用
    * 线程生命周期：由程序员进行管理

#### 2.NSThread
   * 特点：
       1. 使用更加面向对象
       2. 简单易用，可直接操作线程对象
   * 使用语言：OC语言
   * 使用频率：偶尔使用
   * 线程生命周期：由程序员进行管理

#### 3.GCD
   * 特点：
       1. 旨在替代NSThread等线程技术
       2. 充分利用设备的多核（自动）
   * 使用语言：C语言
   * 使用频率：经常使用
   * 线程生命周期：自动管理

#### 4.NSOperation
   * 特点：
       1. 基于GCD（底层是GCD）
       2. 比GCD多了一些更简单实用的功能
       3. 使用更加面向对象
   * 使用语言：OC语言
   * 使用频率：经常使用
   * 线程生命周期：自动管理







